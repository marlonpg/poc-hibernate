#for in memory
#spring.datasource.url=jdbc:h2:mem:testdb
#for in file
#spring.datasource.url=jdbc:h2:file:/home/github/h2/hibernate/data/demo2
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/hibernate
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true


#recreating the schema generated by Hibernate each time
spring.jpa.defer-datasource-initialization=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop
#http://localhost:8080/h2-console
spring.h2.console.enabled=true

#logs
#spring.jpa.show-sql=true
#logging.level.org.hibernate=INFO
#spring.jpa.properties.hibernate.generate_statistics=true
## hibernate perf configs
#spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=1000


#L2 cache
#hibernate.cache.use_second_level_cache=true
#hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
#hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory

## enable selective caching mode only entities with @Cacheable annotation will use L2 cache
#spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE

#hibernate batch
#spring.jpa.properties.hibernate.jdbc.batch_size=50
#spring.jpa.properties.hibernate.order_inserts=true
#spring.jpa.properties.hibernate.order_updates=true
#spring.jpa.properties.hibernate.batch_versioned_data=true